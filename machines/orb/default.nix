# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{
  config,
  pkgs,
  modulesPath,
  inputs,
  ...
}:

{
  imports = [
    # Include the default lxd configuration.
    "${modulesPath}/virtualisation/lxc-container.nix"
    # Include the container-specific autogenerated configuration.
    ./incus.nix
    # Include the OrbStack-specific configuration.
    ./orbstack.nix
    inputs.agenix.nixosModules.default
  ];

  users.users.rohit = {
    uid = 501;
    extraGroups = [
      "wheel"
      "orbstack"
    ];

    # simulate isNormalUser, but with an arbitrary UID
    isSystemUser = true;
    group = "users";
    createHome = true;
    home = "/home/rohit";
    homeMode = "700";
    useDefaultShell = true;
    openssh.authorizedKeys.keys = [
      "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOWUINFSlhsbwckdAlvE/V1ESIk0yXdVvE/BuMEJpEvl"
    ];

  };

  nix.settings = {
    experimental-features = [
      "nix-command"
      "flakes"
    ];
    trusted-users = [
      "root"
      "github-runner-runner1"
      "github-runner-runner2"
      "github-runner-runner3"
      "github-runner-runner4"
      "rohit"
    ];
  };

  nixpkgs.hostPlatform = "aarch64-linux";

  environment.systemPackages = with pkgs; [
    git
    vim
  ];

  age = {
    secrets = {
      github-runner-fold-linux = {
        file = ../../secrets/github-runner-fold-linux.age;
      };
      github-runner-nixos-config-linux = {
        file = ../../secrets/github-runner-nixos-config-linux.age;
      };
      github-runner-sinrohit = {
        file = ../../secrets/github-runner-sinrohit.age;
      };
      github-runner-nixci-linux = {
        file = ../../secrets/github-runner-nixci-linux.age;
      };
    };
  };

  services.github-runners = {
    "runner1" = {
      enable = true;
      name = "linux-runner1";
      url = "https://github.com/sinrohit/fold";
      tokenFile = config.age.secrets.github-runner-fold-linux.path;
      extraPackages = with pkgs; [
        nixci
        cachix
      ];
    };
    "runner2" = {
      enable = true;
      name = "linux-runner2";
      url = "https://github.com/sinrohit/nixos-config";
      tokenFile = config.age.secrets.github-runner-nixos-config-linux.path;
      extraPackages = with pkgs; [
        nixci
        cachix
      ];
    };
    "runner3" = {
      enable = true;
      name = "linux-runner3";
      url = "https://github.com/sinrohit/sinrohit.com";
      tokenFile = config.age.secrets.github-runner-sinrohit.path;
      extraPackages = with pkgs; [
        nixci
        cachix
      ];
    };
    "runner4" = {
      enable = true;
      name = "linux-runner4";
      url = "https://github.com/sinrohit/nixci";
      tokenFile = config.age.secrets.github-runner-nixci-linux.path;
      extraPackages = with pkgs; [
        nixci
        cachix
      ];
    };
  };
  # Don't require password for sudo
  security.sudo.wheelNeedsPassword = false;
  services.openssh.enable = true;

  # This being `true` leads to a few nasty bugs, change at your own risk!
  users.mutableUsers = false;

  time.timeZone = "Asia/Kolkata";

  networking = {
    dhcpcd.enable = false;
    useDHCP = false;
    useHostResolvConf = false;
  };

  systemd.network = {
    enable = true;
    networks."50-eth0" = {
      matchConfig.Name = "eth0";
      networkConfig = {
        DHCP = "ipv4";
        IPv6AcceptRA = true;
      };
      linkConfig.RequiredForOnline = "routable";
    };
  };

  # Extra certificates from OrbStack.
  security.pki.certificates = [
    ''
            -----BEGIN CERTIFICATE-----
      MIICDTCCAbKgAwIBAgIQJNuWPuNRTKk12sShaFuYODAKBggqhkjOPQQDAjBmMR0w
      GwYDVQQKExRPcmJTdGFjayBEZXZlbG9wbWVudDEeMBwGA1UECwwVQ29udGFpbmVy
      cyAmIFNlcnZpY2VzMSUwIwYDVQQDExxPcmJTdGFjayBEZXZlbG9wbWVudCBSb290
      IENBMB4XDTI1MDYxNTA2MzYwOVoXDTM1MDYxNTA2MzYwOVowZjEdMBsGA1UEChMU
      T3JiU3RhY2sgRGV2ZWxvcG1lbnQxHjAcBgNVBAsMFUNvbnRhaW5lcnMgJiBTZXJ2
      aWNlczElMCMGA1UEAxMcT3JiU3RhY2sgRGV2ZWxvcG1lbnQgUm9vdCBDQTBZMBMG
      ByqGSM49AgEGCCqGSM49AwEHA0IABL5UbZKuV5uahbUnGp3ZWAHvF30V8+zTYAjl
      r4pdY7HCtvlw2QB6YKIZocryVzen6MO9dNfgWLG+wkPFI0U+adqjQjBAMA4GA1Ud
      DwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBR5KFhszQ4FN/TL
      bDcH4B5uIi6e9zAKBggqhkjOPQQDAgNJADBGAiEA8xz+AExJDAamKBhBSkbMBaVc
      FMRe3kd3n/9ywlUQE9MCIQDi+/g5Vfir9QIx0AvQg13vLVn0Q6fwNr2rLWywPaop
      tQ==
      -----END CERTIFICATE-----

    ''
  ];

  # This option defines the first version of NixOS you have installed on this particular machine,
  # and is used to maintain compatibility with application data (e.g. databases) created on older NixOS versions.
  #
  # Most users should NEVER change this value after the initial install, for any reason,
  # even if you've upgraded your system to a new NixOS release.
  #
  # This value does NOT affect the Nixpkgs version your packages and OS are pulled from,
  # so changing it will NOT upgrade your system - see https://nixos.org/manual/nixos/stable/#sec-upgrading for how
  # to actually do that.
  #
  # This value being lower than the current NixOS release does NOT mean your system is
  # out of date, out of support, or vulnerable.
  #
  # Do NOT change this value unless you have manually inspected all the changes it would make to your configuration,
  # and migrated your data accordingly.
  #
  # For more information, see `man configuration.nix` or https://nixos.org/manual/nixos/stable/options#opt-system.stateVersion .
  system.stateVersion = "25.05"; # Did you read the comment?
}
